—— HTTP、网络、浏览器
	1、HTTP和HTTPS的区别？
		—— HTTPS需要CA申请书,很少有免费的，需要交费
		—— HTTP运行在TCP之上，所有传输都是明文，而HTTPS是运行在SSL/TLS之上，而SSL/TLS是运行在TCP之上，所有传输内容都是经过加密的
		—— HTTPS有效的防止了运营商的劫持
		—— HTTP用的端口是80，HTTPS运行的端口是443
		—— HTTPS是非对称加密
	2、HTTP1.0、HTTP1.X 与HTTP2.0的区别？（1996年 1999年 2015年）
		—— 新的二进制格式（Binary Format）
			1、HTTP1.x的解析是基于文本。基于文本协议的格式解析存在天然缺陷，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只认0和1的组合。基于这种考虑HTTP2.0的协议解析决定采用二进制格式，实现方便且健壮。
		—— 多路复用（MultiPlexing）
			1、即连接共享，即每一个request都是是用作连接共享机制的。一个request对应一个id，这样一个连接上可以有多个request，每个连接的request可以随机的混杂在一起，接收方可以根据request的 id将request再归属到各自不同的服务端请求里面。
		—— header压缩
			1、如上文中所言，对前面提到过HTTP1.x的header带有大量信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。
		—— 服务端推送（server push）
			1、同SPDY一样，HTTP2.0也具有server push功能
	3、跨域的九种方式？
	4、TCP的长连接和短连接的区别？
		—— 短链接
			1、概念:客户端与服务器建立连接开始通信，一次/指定次数通信结束之后就断开本次TCP连接， 当下次再次通信时，再次建立TCP的链接。
			2、优点：不长期占用服务器的内存，那么服务器能处理的连接数量是比较多的
			3、缺点：
				—— 因为要等到发送或者获取资源时，才去请求建立连接，而且http协议只能客户端主动向服务端发送数据后，服务端才返回对应的数据，那么服务端想主动发送数据给客户端呢？Websocket可以让服务端主动发送数据给客户端，或者要等到下一次要请求数据时，才发送，比如我们采用 轮询（30秒或者更长）拉取消息， 那么服务器与客户端通信的实时性就丧失了。
				—— 客户端采用轮询来实时获取信息，或者说大量的客户端使用短连接的方式通信，那么就浪费了大量的CPU和带宽资源用于建立连接和释放连接，存在资源浪费，甚至是无法建立连接。比如经典的http长轮询（微信网页客户端端）
		—— 长连接
			1、概念: TCP与服务器建立连接之后一直处于连接状态，直到最后不再需要服务的时候才断开连接
			2、优点： 1、传输数据快 2、服务器能够主动第一时间传输数据到客户端
			3、缺点: 
				—— 因为客户端与服务器一直保持这种连接，那么在高并发分布式集群系统中客户端数量会越来越多，占用很多的系统资源 
				—— TCP本身是一种有状态的数据，在高并发分布式系统会导致后台设计比较难做。












				