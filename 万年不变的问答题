一、地址输入URL发生了什么？
	1、首先会进行URL解析，根据DNS系统进行IP地址查找。
	2、根据IP找到服务器，然后浏览器和服务器会进行TCP三次握手建立连接，如果此时是HTTPS的话，还会建立TLS连接以及协商加密算法。（这里就会出现另一个需要注意的问题”HTTPS和HTTP的区别“）
	3、连接建立之后浏览器开始发送请求获取文件，（此时这里还会出现一种情况就是缓存，建立连接后是走缓存还是直接重新获取，需要看后台设置，所以这里会有一个关注的问题”浏览器缓存机制“）
	4、首先获取HTML文件，构建DOM树，这个过程是边下载边解析，并不是等HTML文件全部下载完了，再去解析HTML，这样会比较浪费时间，而是下载一点解析一点
	5、解析到HTML头部时候，又会出现一种问题，CSS，JS放到哪里了？不同的位置会造成渲染的不同，此时就会出现另一个需要关注的问题”CSS，JS位置应该放哪里？为什么“，我们先按照正确的位置来说明（CSS放头部，JS放尾部）
	6、解析到了HTML头部发现CSS文件，此时下载CSS文件，CSS文件也是一边下载一边解析的，构建的是CSSOM树，当DOM树和CSSOM树全部构建完之后，浏览器会把DOM树和CSSOM树构建成渲染树（样式计算,DOM树和CSSOM树有了之后，浏览器开始样式计算，主要是为DOM树上的节点找到对应的样式）。
	7、构建布局树，样式计算完之后就开始构建布局树。主要是为DOM树上的节点找到页面上对应位置以及一些”display: none“元素的隐藏。
	8、构建分层树，布局树完成后浏览器还需要建立分层树，主要是为了满足滚动条，z-index，position这些复杂的分层操作。
	9、将分层树图块化，利用光栅找到视图窗口下的对应的位图。主要是因为一个页面可能有几屏那么长，一下渲染出来比较浪费，所以浏览器会找到视图窗口对应的图块，将这部分的图块进行渲染。
	10、最终渲染进程将整个页面渲染出来，在渲染的过程中还会出现重排和重绘（这也是比较爱问的问题，重排重绘为什么会影响渲染，如何避免？）。


二、JS CSS顺序对前端优化影响
	渲染树的构成必须要DOM树和CSSOM树，所以尽快的构建CSSOM树是一个重要的优化手段，如果CSS文件放到尾部，那么整个过程就是一串行的过程先解析了DOM，再去解析CSS。所以CSS我们一般放到头部，这样DOM树和CSSOM树的构建是同步进行的。

	JS会阻止DOM树的渲染，所以一旦我们的 js 放在了头部，而且也没有异步加载这些操作的话，js 一旦一直在运行，DOM 树就一直构建不出来，那么页面就会一直出现白屏界面，所以一般我们会把 js 文件放在尾部。当然放到尾部也不是就没有问题了，只是问题相对较小，放到尾部的 js文件如果过大，运行时间长，代码加载时，就会有大量耗时的操作造成页面不可点击，这就是另一个问题，但这肯定比白屏要好，白屏是什么页面都没有，这种是页面有了只是操作不流畅。
	js 脚本放在尾部还有一个原因，有时候 js 代码会有操作 dom 节点的情况，如果放在头部执行，DOM树还没有构建，拿不到 DOM 节点但是你又去使用就会出现报错情况，错误没处理好的话页面会直接崩掉。


三、重排重绘为什么会影响渲染，如何避免?

四、浏览器缓存机制
	1、浏览器缓存方式
	2、浏览器缓存实现

五、垃圾回收机制
	垃圾回收机制：https://www.cnblogs.com/fundebug/p/javascript-memory-garbage-collection.html

